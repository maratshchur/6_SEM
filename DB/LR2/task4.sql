CREATE TABLE STUDENTS_LOG (
    LOG_ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    STUDENT_ID NUMBER,
    ACTION VARCHAR2(10),
    ACTION_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    OLD_NAME VARCHAR2(50),
    NEW_NAME VARCHAR2(50),
    OLD_GROUP_ID NUMBER,
    NEW_GROUP_ID NUMBER
);

CREATE OR REPLACE TRIGGER trg_students_audit
AFTER INSERT OR UPDATE OR DELETE ON STUDENTS
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO STUDENTS_LOG (STUDENT_ID, ACTION, NEW_NAME, NEW_GROUP_ID)
        VALUES (:NEW.ID, 'INSERT', :NEW.NAME, :NEW.GROUP_ID);
    ELSIF UPDATING THEN
        INSERT INTO STUDENTS_LOG (STUDENT_ID, ACTION, OLD_NAME, NEW_NAME, OLD_GROUP_ID, NEW_GROUP_ID)
        VALUES (:OLD.ID, 'UPDATE', :OLD.NAME, :NEW.NAME, :OLD.GROUP_ID, :NEW.GROUP_ID);
    ELSIF DELETING THEN
        INSERT INTO STUDENTS_LOG (STUDENT_ID, ACTION, OLD_NAME, OLD_GROUP_ID)
        VALUES (:OLD.ID, 'DELETE', :OLD.NAME, :OLD.GROUP_ID);
    END IF;
END;
/


-- BEGIN
--     DELETE FROM STUDENTS_LOG;
--     DELETE FROM STUDENTS;
--     COMMIT;
-- END;
-- /

-- BEGIN
--     INSERT INTO STUDENTS (ID, NAME, GROUP_ID) VALUES (1, 'Alice', 1);
--     INSERT INTO STUDENTS (ID, NAME, GROUP_ID) VALUES (2, 'Bob', 1);
--     COMMIT;
-- END;
-- /

-- BEGIN
--     UPDATE STUDENTS SET NAME = 'Alice Smith' WHERE ID = 1;
--     COMMIT;
-- END;
-- /

-- BEGIN
--     DELETE FROM STUDENTS WHERE ID = 2;
--     COMMIT;
-- END;
-- /
